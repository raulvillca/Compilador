Terminals unused in grammar

   AND
   OR
   OP_ACUMULADOR
   I_END


Gramática

    0 $accept: programa $end

    1 programa: sentencia
    2         | programa sentencia

    3 sentencia: P_DECVAR dec_declaracion P_ENDDEC
    4          | P_DEFVAR def_declaracion P_ENDDEF
    5          | asignacion
    6          | iterador
    7          | condicional
    8          | b_between
    9          | b_inList
   10          | b_write
   11          | b_read

   12 dec_declaracion: declaracion DOS_P tipo_dato

   13 def_declaracion: declaracion DOS_P tipo_dato
   14                | def_declaracion declaracion DOS_P tipo_dato

   15 declaracion: ID
   16            | declaracion COMA ID

   17 tipo_dato: T_ENTERO
   18          | T_STRING
   19          | T_FLOTANTE

   20 asignacion: id OP_ASIG expresion

   21 id: ID

   22 iterador: I_WHILE condicion LLA_A programa LLA_C

   23 condicional: I_IF condicion LLA_A programa LLA_C
   24            | I_IF condicion LLA_A programa LLA_C else LLA_A programa LLA_C

   25 else: I_ELSE

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A inferior COMA superior COR_C PAR_C

   27 b_inList: P_INLIST PAR_A param_inList COMA COR_A lista COR_C PAR_C

   28 b_write: P_WRITE C_CADENA
   29        | P_WRITE ID

   30 b_read: P_READ ID

   31 inferior: expresion

   32 superior: expresion

   33 param_inList: ID

   34 param_between: ID

   35 lista: expresion
   36      | lista PUNTO_COMA expresion

   37 comparador: expresion cmp expresion

   38 condicion: comparador
   39          | comparador op_log comparador

   40 op_log: OP_LOG_AND
   41       | OP_LOG_OR

   42 cmp: OP_CMP_mI
   43    | OP_CMP_MI
   44    | OP_CMP_m
   45    | OP_CMP_M
   46    | OP_CMP_IGUAL

   47 expresion: termino
   48          | expresion op_sum_res termino

   49 op_sum_res: OP_SUM
   50           | OP_RES

   51 termino: factor
   52        | termino op_mult_div factor

   53 op_mult_div: OP_MULT
   54            | OP_DIV

   55 factor: ID
   56       | C_ENTERO
   57       | C_FLOTANTE
   58       | C_CADENA
   59       | PAR_A expresion PAR_C


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 15 16 21 29 30 33 34 55
OP_SUM (259) 49
OP_RES (260) 50
OP_MULT (261) 53
OP_DIV (262) 54
AND (263)
OR (264)
COR_A (265) 26 27
COR_C (266) 26 27
PAR_A (267) 26 27 59
PAR_C (268) 26 27 59
LLA_A (269) 22 23 24
LLA_C (270) 22 23 24
PUNTO_COMA (271) 36
COMA (272) 16 26 27
DOS_P (273) 12 13 14
OP_ASIG (274) 20
OP_ACUMULADOR (275)
OP_LOG_AND (276) 40
OP_LOG_OR (277) 41
I_WHILE (278) 22
I_END (279)
I_IF (280) 23 24
I_ELSE (281) 25
C_FLOTANTE (282) 57
C_CADENA (283) 28 58
C_ENTERO (284) 56
P_WRITE (285) 28 29
P_READ (286) 30
P_DECVAR (287) 3
P_ENDDEC (288) 3
P_DEFVAR (289) 4
P_ENDDEF (290) 4
P_INLIST (291) 27
P_BETWEEN (292) 26
OP_CMP_mI (293) 42
OP_CMP_MI (294) 43
OP_CMP_m (295) 44
OP_CMP_M (296) 45
OP_CMP_IGUAL (297) 46
T_ENTERO (298) 17
T_FLOTANTE (299) 19
T_STRING (300) 18


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
programa (47)
    en la izquierda: 1 2, en la derecha: 0 2 22 23 24
sentencia (48)
    en la izquierda: 3 4 5 6 7 8 9 10 11, en la derecha: 1 2
dec_declaracion (49)
    en la izquierda: 12, en la derecha: 3
def_declaracion (50)
    en la izquierda: 13 14, en la derecha: 4 14
declaracion (51)
    en la izquierda: 15 16, en la derecha: 12 13 14 16
tipo_dato (52)
    en la izquierda: 17 18 19, en la derecha: 12 13 14
asignacion (53)
    en la izquierda: 20, en la derecha: 5
id (54)
    en la izquierda: 21, en la derecha: 20
iterador (55)
    en la izquierda: 22, en la derecha: 6
condicional (56)
    en la izquierda: 23 24, en la derecha: 7
else (57)
    en la izquierda: 25, en la derecha: 24
b_between (58)
    en la izquierda: 26, en la derecha: 8
b_inList (59)
    en la izquierda: 27, en la derecha: 9
b_write (60)
    en la izquierda: 28 29, en la derecha: 10
b_read (61)
    en la izquierda: 30, en la derecha: 11
inferior (62)
    en la izquierda: 31, en la derecha: 26
superior (63)
    en la izquierda: 32, en la derecha: 26
param_inList (64)
    en la izquierda: 33, en la derecha: 27
param_between (65)
    en la izquierda: 34, en la derecha: 26
lista (66)
    en la izquierda: 35 36, en la derecha: 27 36
comparador (67)
    en la izquierda: 37, en la derecha: 38 39
condicion (68)
    en la izquierda: 38 39, en la derecha: 22 23 24
op_log (69)
    en la izquierda: 40 41, en la derecha: 39
cmp (70)
    en la izquierda: 42 43 44 45 46, en la derecha: 37
expresion (71)
    en la izquierda: 47 48, en la derecha: 20 31 32 35 36 37 48 59
op_sum_res (72)
    en la izquierda: 49 50, en la derecha: 48
termino (73)
    en la izquierda: 51 52, en la derecha: 47 48 52
op_mult_div (74)
    en la izquierda: 53 54, en la derecha: 52
factor (75)
    en la izquierda: 55 56 57 58 59, en la derecha: 51 52


estado 0

    0 $accept: . programa $end

    ID         desplazar e ir al estado 1
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    programa     ir al estado 10
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 1

   21 id: ID .

    $default  reduce usando la regla 21 (id)


estado 2

   22 iterador: I_WHILE . condicion LLA_A programa LLA_C

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    comparador  ir al estado 25
    condicion   ir al estado 26
    expresion   ir al estado 27
    termino     ir al estado 28
    factor      ir al estado 29


estado 3

   23 condicional: I_IF . condicion LLA_A programa LLA_C
   24            | I_IF . condicion LLA_A programa LLA_C else LLA_A programa LLA_C

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    comparador  ir al estado 25
    condicion   ir al estado 30
    expresion   ir al estado 27
    termino     ir al estado 28
    factor      ir al estado 29


estado 4

   28 b_write: P_WRITE . C_CADENA
   29        | P_WRITE . ID

    ID        desplazar e ir al estado 31
    C_CADENA  desplazar e ir al estado 32


estado 5

   30 b_read: P_READ . ID

    ID  desplazar e ir al estado 33


estado 6

    3 sentencia: P_DECVAR . dec_declaracion P_ENDDEC

    ID  desplazar e ir al estado 34

    dec_declaracion  ir al estado 35
    declaracion      ir al estado 36


estado 7

    4 sentencia: P_DEFVAR . def_declaracion P_ENDDEF

    ID  desplazar e ir al estado 34

    def_declaracion  ir al estado 37
    declaracion      ir al estado 38


estado 8

   27 b_inList: P_INLIST . PAR_A param_inList COMA COR_A lista COR_C PAR_C

    PAR_A  desplazar e ir al estado 39


estado 9

   26 b_between: P_BETWEEN . PAR_A param_between COMA COR_A inferior COMA superior COR_C PAR_C

    PAR_A  desplazar e ir al estado 40


estado 10

    0 $accept: programa . $end
    2 programa: programa . sentencia

    $end       desplazar e ir al estado 41
    ID         desplazar e ir al estado 1
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    sentencia    ir al estado 42
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 11

    1 programa: sentencia .

    $default  reduce usando la regla 1 (programa)


estado 12

    5 sentencia: asignacion .

    $default  reduce usando la regla 5 (sentencia)


estado 13

   20 asignacion: id . OP_ASIG expresion

    OP_ASIG  desplazar e ir al estado 43


estado 14

    6 sentencia: iterador .

    $default  reduce usando la regla 6 (sentencia)


estado 15

    7 sentencia: condicional .

    $default  reduce usando la regla 7 (sentencia)


estado 16

    8 sentencia: b_between .

    $default  reduce usando la regla 8 (sentencia)


estado 17

    9 sentencia: b_inList .

    $default  reduce usando la regla 9 (sentencia)


estado 18

   10 sentencia: b_write .

    $default  reduce usando la regla 10 (sentencia)


estado 19

   11 sentencia: b_read .

    $default  reduce usando la regla 11 (sentencia)


estado 20

   55 factor: ID .

    $default  reduce usando la regla 55 (factor)


estado 21

   59 factor: PAR_A . expresion PAR_C

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    expresion  ir al estado 44
    termino    ir al estado 28
    factor     ir al estado 29


estado 22

   57 factor: C_FLOTANTE .

    $default  reduce usando la regla 57 (factor)


estado 23

   58 factor: C_CADENA .

    $default  reduce usando la regla 58 (factor)


estado 24

   56 factor: C_ENTERO .

    $default  reduce usando la regla 56 (factor)


estado 25

   38 condicion: comparador .
   39          | comparador . op_log comparador

    OP_LOG_AND  desplazar e ir al estado 45
    OP_LOG_OR   desplazar e ir al estado 46

    $default  reduce usando la regla 38 (condicion)

    op_log  ir al estado 47


estado 26

   22 iterador: I_WHILE condicion . LLA_A programa LLA_C

    LLA_A  desplazar e ir al estado 48


estado 27

   37 comparador: expresion . cmp expresion
   48 expresion: expresion . op_sum_res termino

    OP_SUM        desplazar e ir al estado 49
    OP_RES        desplazar e ir al estado 50
    OP_CMP_mI     desplazar e ir al estado 51
    OP_CMP_MI     desplazar e ir al estado 52
    OP_CMP_m      desplazar e ir al estado 53
    OP_CMP_M      desplazar e ir al estado 54
    OP_CMP_IGUAL  desplazar e ir al estado 55

    cmp         ir al estado 56
    op_sum_res  ir al estado 57


estado 28

   47 expresion: termino .
   52 termino: termino . op_mult_div factor

    OP_MULT  desplazar e ir al estado 58
    OP_DIV   desplazar e ir al estado 59

    $default  reduce usando la regla 47 (expresion)

    op_mult_div  ir al estado 60


estado 29

   51 termino: factor .

    $default  reduce usando la regla 51 (termino)


estado 30

   23 condicional: I_IF condicion . LLA_A programa LLA_C
   24            | I_IF condicion . LLA_A programa LLA_C else LLA_A programa LLA_C

    LLA_A  desplazar e ir al estado 61


estado 31

   29 b_write: P_WRITE ID .

    $default  reduce usando la regla 29 (b_write)


estado 32

   28 b_write: P_WRITE C_CADENA .

    $default  reduce usando la regla 28 (b_write)


estado 33

   30 b_read: P_READ ID .

    $default  reduce usando la regla 30 (b_read)


estado 34

   15 declaracion: ID .

    $default  reduce usando la regla 15 (declaracion)


estado 35

    3 sentencia: P_DECVAR dec_declaracion . P_ENDDEC

    P_ENDDEC  desplazar e ir al estado 62


estado 36

   12 dec_declaracion: declaracion . DOS_P tipo_dato
   16 declaracion: declaracion . COMA ID

    COMA   desplazar e ir al estado 63
    DOS_P  desplazar e ir al estado 64


estado 37

    4 sentencia: P_DEFVAR def_declaracion . P_ENDDEF
   14 def_declaracion: def_declaracion . declaracion DOS_P tipo_dato

    ID        desplazar e ir al estado 34
    P_ENDDEF  desplazar e ir al estado 65

    declaracion  ir al estado 66


estado 38

   13 def_declaracion: declaracion . DOS_P tipo_dato
   16 declaracion: declaracion . COMA ID

    COMA   desplazar e ir al estado 63
    DOS_P  desplazar e ir al estado 67


estado 39

   27 b_inList: P_INLIST PAR_A . param_inList COMA COR_A lista COR_C PAR_C

    ID  desplazar e ir al estado 68

    param_inList  ir al estado 69


estado 40

   26 b_between: P_BETWEEN PAR_A . param_between COMA COR_A inferior COMA superior COR_C PAR_C

    ID  desplazar e ir al estado 70

    param_between  ir al estado 71


estado 41

    0 $accept: programa $end .

    $default  aceptar


estado 42

    2 programa: programa sentencia .

    $default  reduce usando la regla 2 (programa)


estado 43

   20 asignacion: id OP_ASIG . expresion

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    expresion  ir al estado 72
    termino    ir al estado 28
    factor     ir al estado 29


estado 44

   48 expresion: expresion . op_sum_res termino
   59 factor: PAR_A expresion . PAR_C

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50
    PAR_C   desplazar e ir al estado 73

    op_sum_res  ir al estado 57


estado 45

   40 op_log: OP_LOG_AND .

    $default  reduce usando la regla 40 (op_log)


estado 46

   41 op_log: OP_LOG_OR .

    $default  reduce usando la regla 41 (op_log)


estado 47

   39 condicion: comparador op_log . comparador

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    comparador  ir al estado 74
    expresion   ir al estado 27
    termino     ir al estado 28
    factor      ir al estado 29


estado 48

   22 iterador: I_WHILE condicion LLA_A . programa LLA_C

    ID         desplazar e ir al estado 1
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    programa     ir al estado 75
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 49

   49 op_sum_res: OP_SUM .

    $default  reduce usando la regla 49 (op_sum_res)


estado 50

   50 op_sum_res: OP_RES .

    $default  reduce usando la regla 50 (op_sum_res)


estado 51

   42 cmp: OP_CMP_mI .

    $default  reduce usando la regla 42 (cmp)


estado 52

   43 cmp: OP_CMP_MI .

    $default  reduce usando la regla 43 (cmp)


estado 53

   44 cmp: OP_CMP_m .

    $default  reduce usando la regla 44 (cmp)


estado 54

   45 cmp: OP_CMP_M .

    $default  reduce usando la regla 45 (cmp)


estado 55

   46 cmp: OP_CMP_IGUAL .

    $default  reduce usando la regla 46 (cmp)


estado 56

   37 comparador: expresion cmp . expresion

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    expresion  ir al estado 76
    termino    ir al estado 28
    factor     ir al estado 29


estado 57

   48 expresion: expresion op_sum_res . termino

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    termino  ir al estado 77
    factor   ir al estado 29


estado 58

   53 op_mult_div: OP_MULT .

    $default  reduce usando la regla 53 (op_mult_div)


estado 59

   54 op_mult_div: OP_DIV .

    $default  reduce usando la regla 54 (op_mult_div)


estado 60

   52 termino: termino op_mult_div . factor

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    factor  ir al estado 78


estado 61

   23 condicional: I_IF condicion LLA_A . programa LLA_C
   24            | I_IF condicion LLA_A . programa LLA_C else LLA_A programa LLA_C

    ID         desplazar e ir al estado 1
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    programa     ir al estado 79
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 62

    3 sentencia: P_DECVAR dec_declaracion P_ENDDEC .

    $default  reduce usando la regla 3 (sentencia)


estado 63

   16 declaracion: declaracion COMA . ID

    ID  desplazar e ir al estado 80


estado 64

   12 dec_declaracion: declaracion DOS_P . tipo_dato

    T_ENTERO    desplazar e ir al estado 81
    T_FLOTANTE  desplazar e ir al estado 82
    T_STRING    desplazar e ir al estado 83

    tipo_dato  ir al estado 84


estado 65

    4 sentencia: P_DEFVAR def_declaracion P_ENDDEF .

    $default  reduce usando la regla 4 (sentencia)


estado 66

   14 def_declaracion: def_declaracion declaracion . DOS_P tipo_dato
   16 declaracion: declaracion . COMA ID

    COMA   desplazar e ir al estado 63
    DOS_P  desplazar e ir al estado 85


estado 67

   13 def_declaracion: declaracion DOS_P . tipo_dato

    T_ENTERO    desplazar e ir al estado 81
    T_FLOTANTE  desplazar e ir al estado 82
    T_STRING    desplazar e ir al estado 83

    tipo_dato  ir al estado 86


estado 68

   33 param_inList: ID .

    $default  reduce usando la regla 33 (param_inList)


estado 69

   27 b_inList: P_INLIST PAR_A param_inList . COMA COR_A lista COR_C PAR_C

    COMA  desplazar e ir al estado 87


estado 70

   34 param_between: ID .

    $default  reduce usando la regla 34 (param_between)


estado 71

   26 b_between: P_BETWEEN PAR_A param_between . COMA COR_A inferior COMA superior COR_C PAR_C

    COMA  desplazar e ir al estado 88


estado 72

   20 asignacion: id OP_ASIG expresion .
   48 expresion: expresion . op_sum_res termino

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50

    $default  reduce usando la regla 20 (asignacion)

    op_sum_res  ir al estado 57


estado 73

   59 factor: PAR_A expresion PAR_C .

    $default  reduce usando la regla 59 (factor)


estado 74

   39 condicion: comparador op_log comparador .

    $default  reduce usando la regla 39 (condicion)


estado 75

    2 programa: programa . sentencia
   22 iterador: I_WHILE condicion LLA_A programa . LLA_C

    ID         desplazar e ir al estado 1
    LLA_C      desplazar e ir al estado 89
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    sentencia    ir al estado 42
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 76

   37 comparador: expresion cmp expresion .
   48 expresion: expresion . op_sum_res termino

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50

    $default  reduce usando la regla 37 (comparador)

    op_sum_res  ir al estado 57


estado 77

   48 expresion: expresion op_sum_res termino .
   52 termino: termino . op_mult_div factor

    OP_MULT  desplazar e ir al estado 58
    OP_DIV   desplazar e ir al estado 59

    $default  reduce usando la regla 48 (expresion)

    op_mult_div  ir al estado 60


estado 78

   52 termino: termino op_mult_div factor .

    $default  reduce usando la regla 52 (termino)


estado 79

    2 programa: programa . sentencia
   23 condicional: I_IF condicion LLA_A programa . LLA_C
   24            | I_IF condicion LLA_A programa . LLA_C else LLA_A programa LLA_C

    ID         desplazar e ir al estado 1
    LLA_C      desplazar e ir al estado 90
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    sentencia    ir al estado 42
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 80

   16 declaracion: declaracion COMA ID .

    $default  reduce usando la regla 16 (declaracion)


estado 81

   17 tipo_dato: T_ENTERO .

    $default  reduce usando la regla 17 (tipo_dato)


estado 82

   19 tipo_dato: T_FLOTANTE .

    $default  reduce usando la regla 19 (tipo_dato)


estado 83

   18 tipo_dato: T_STRING .

    $default  reduce usando la regla 18 (tipo_dato)


estado 84

   12 dec_declaracion: declaracion DOS_P tipo_dato .

    $default  reduce usando la regla 12 (dec_declaracion)


estado 85

   14 def_declaracion: def_declaracion declaracion DOS_P . tipo_dato

    T_ENTERO    desplazar e ir al estado 81
    T_FLOTANTE  desplazar e ir al estado 82
    T_STRING    desplazar e ir al estado 83

    tipo_dato  ir al estado 91


estado 86

   13 def_declaracion: declaracion DOS_P tipo_dato .

    $default  reduce usando la regla 13 (def_declaracion)


estado 87

   27 b_inList: P_INLIST PAR_A param_inList COMA . COR_A lista COR_C PAR_C

    COR_A  desplazar e ir al estado 92


estado 88

   26 b_between: P_BETWEEN PAR_A param_between COMA . COR_A inferior COMA superior COR_C PAR_C

    COR_A  desplazar e ir al estado 93


estado 89

   22 iterador: I_WHILE condicion LLA_A programa LLA_C .

    $default  reduce usando la regla 22 (iterador)


estado 90

   23 condicional: I_IF condicion LLA_A programa LLA_C .
   24            | I_IF condicion LLA_A programa LLA_C . else LLA_A programa LLA_C

    I_ELSE  desplazar e ir al estado 94

    $default  reduce usando la regla 23 (condicional)

    else  ir al estado 95


estado 91

   14 def_declaracion: def_declaracion declaracion DOS_P tipo_dato .

    $default  reduce usando la regla 14 (def_declaracion)


estado 92

   27 b_inList: P_INLIST PAR_A param_inList COMA COR_A . lista COR_C PAR_C

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    lista      ir al estado 96
    expresion  ir al estado 97
    termino    ir al estado 28
    factor     ir al estado 29


estado 93

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A . inferior COMA superior COR_C PAR_C

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    inferior   ir al estado 98
    expresion  ir al estado 99
    termino    ir al estado 28
    factor     ir al estado 29


estado 94

   25 else: I_ELSE .

    $default  reduce usando la regla 25 (else)


estado 95

   24 condicional: I_IF condicion LLA_A programa LLA_C else . LLA_A programa LLA_C

    LLA_A  desplazar e ir al estado 100


estado 96

   27 b_inList: P_INLIST PAR_A param_inList COMA COR_A lista . COR_C PAR_C
   36 lista: lista . PUNTO_COMA expresion

    COR_C       desplazar e ir al estado 101
    PUNTO_COMA  desplazar e ir al estado 102


estado 97

   35 lista: expresion .
   48 expresion: expresion . op_sum_res termino

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50

    $default  reduce usando la regla 35 (lista)

    op_sum_res  ir al estado 57


estado 98

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A inferior . COMA superior COR_C PAR_C

    COMA  desplazar e ir al estado 103


estado 99

   31 inferior: expresion .
   48 expresion: expresion . op_sum_res termino

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50

    $default  reduce usando la regla 31 (inferior)

    op_sum_res  ir al estado 57


estado 100

   24 condicional: I_IF condicion LLA_A programa LLA_C else LLA_A . programa LLA_C

    ID         desplazar e ir al estado 1
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    programa     ir al estado 104
    sentencia    ir al estado 11
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 101

   27 b_inList: P_INLIST PAR_A param_inList COMA COR_A lista COR_C . PAR_C

    PAR_C  desplazar e ir al estado 105


estado 102

   36 lista: lista PUNTO_COMA . expresion

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    expresion  ir al estado 106
    termino    ir al estado 28
    factor     ir al estado 29


estado 103

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A inferior COMA . superior COR_C PAR_C

    ID          desplazar e ir al estado 20
    PAR_A       desplazar e ir al estado 21
    C_FLOTANTE  desplazar e ir al estado 22
    C_CADENA    desplazar e ir al estado 23
    C_ENTERO    desplazar e ir al estado 24

    superior   ir al estado 107
    expresion  ir al estado 108
    termino    ir al estado 28
    factor     ir al estado 29


estado 104

    2 programa: programa . sentencia
   24 condicional: I_IF condicion LLA_A programa LLA_C else LLA_A programa . LLA_C

    ID         desplazar e ir al estado 1
    LLA_C      desplazar e ir al estado 109
    I_WHILE    desplazar e ir al estado 2
    I_IF       desplazar e ir al estado 3
    P_WRITE    desplazar e ir al estado 4
    P_READ     desplazar e ir al estado 5
    P_DECVAR   desplazar e ir al estado 6
    P_DEFVAR   desplazar e ir al estado 7
    P_INLIST   desplazar e ir al estado 8
    P_BETWEEN  desplazar e ir al estado 9

    sentencia    ir al estado 42
    asignacion   ir al estado 12
    id           ir al estado 13
    iterador     ir al estado 14
    condicional  ir al estado 15
    b_between    ir al estado 16
    b_inList     ir al estado 17
    b_write      ir al estado 18
    b_read       ir al estado 19


estado 105

   27 b_inList: P_INLIST PAR_A param_inList COMA COR_A lista COR_C PAR_C .

    $default  reduce usando la regla 27 (b_inList)


estado 106

   36 lista: lista PUNTO_COMA expresion .
   48 expresion: expresion . op_sum_res termino

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50

    $default  reduce usando la regla 36 (lista)

    op_sum_res  ir al estado 57


estado 107

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A inferior COMA superior . COR_C PAR_C

    COR_C  desplazar e ir al estado 110


estado 108

   32 superior: expresion .
   48 expresion: expresion . op_sum_res termino

    OP_SUM  desplazar e ir al estado 49
    OP_RES  desplazar e ir al estado 50

    $default  reduce usando la regla 32 (superior)

    op_sum_res  ir al estado 57


estado 109

   24 condicional: I_IF condicion LLA_A programa LLA_C else LLA_A programa LLA_C .

    $default  reduce usando la regla 24 (condicional)


estado 110

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A inferior COMA superior COR_C . PAR_C

    PAR_C  desplazar e ir al estado 111


estado 111

   26 b_between: P_BETWEEN PAR_A param_between COMA COR_A inferior COMA superior COR_C PAR_C .

    $default  reduce usando la regla 26 (b_between)
